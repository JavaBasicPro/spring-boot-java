package bigTalkDesignPattern;

/**
 * 代理模式：代理角色和真实角色 都实现某个接口，代理角色持有 真实角色的引用，分：静态代理和动态代理（通过使用jdk自带的InvocationHandler接口实现）
 * 使用场景：
 *  1、远程代理：隐藏在不同的地址空间的对象的访问，让调用者觉得这些对象存在于一个地址空间
 *  2、安全代理：控制对真实对象的访问权限
 *  3、虚拟代理：创建对象需要时间开发，可以使用代理来存放实例化需要很长时间的真实对象，比如：浏览网页时会先出来文字，图片是延时加载的
 * */
public class Proxy{

}
